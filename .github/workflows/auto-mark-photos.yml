name: Auto Mark Photos as Completed

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  mark-photos:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Execute photo marking script
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      run: |
        # Crear script temporal para ejecutar la funci√≥n
        cat > execute_photo_marking.js << 'EOF'
        const { createClient } = require('@supabase/supabase-js');
        
        const supabaseUrl = process.env.SUPABASE_URL;
        const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
        
        if (!supabaseUrl || !supabaseKey) {
          console.error('‚ùå Variables de entorno de Supabase no encontradas');
          process.exit(1);
        }
        
        const supabase = createClient(supabaseUrl, supabaseKey);
        
        async function markPhotosAsCompleted() {
          try {
            console.log('üöÄ Iniciando marcado autom√°tico de fotos...');
            
            // Ejecutar la funci√≥n SQL que marca las fotos
            const { data, error } = await supabase.rpc('mark_photos_as_completed');
            
            if (error) {
              console.error('‚ùå Error ejecutando funci√≥n:', error);
              process.exit(1);
            }
            
            console.log('‚úÖ Funci√≥n ejecutada correctamente');
            console.log('üìä Resultados:', JSON.stringify(data, null, 2));
            
            // Verificar resultados
            if (data && data.total_updated > 0) {
              console.log(`üéâ Se marcaron ${data.total_updated} veh√≠culos como fotografiados`);
            } else {
              console.log('‚ÑπÔ∏è No se encontraron veh√≠culos para marcar como fotografiados');
            }
            
          } catch (error) {
            console.error('‚ùå Error:', error);
            process.exit(1);
          }
        }
        
        markPhotosAsCompleted();
        EOF
        
        # Instalar dependencias necesarias
        npm install @supabase/supabase-js
        
        # Ejecutar el script
        node execute_photo_marking.js 